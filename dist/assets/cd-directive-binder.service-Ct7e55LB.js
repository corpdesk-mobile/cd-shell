class o{constructor(t){this.valid=!0,this.controls=t}get value(){const t={};for(const[e,r]of Object.entries(this.controls))t[e]=r.value;return t}validateAll(){const t={};this.valid=!0;for(const[e,r]of Object.entries(this.controls)){const s=r.validate();t[e]=s,s&&(this.valid=!1)}return t}markAllAsTouched(){for(const t of Object.values(this.controls))t.markAsTouched()}reset(){for(const t of Object.values(this.controls))t.reset()}}class n{constructor(t=null,e=[]){this._errors=[],this.touched=!1,this.dirty=!1,this._value=t,this._validators=e}get value(){return this._value}get valid(){return this._errors.length===0}get errors(){return this._errors}get error(){return this._errors.length>0?this._errors[0]:null}setValue(t){this._value!==t&&(this._value=t,this.dirty=!0),this.validate()}markAsTouched(){this.touched=!0}validate(){this._errors=[];for(const t of this._validators){const e=t(this._value);e&&this._errors.push(e)}return this.error}reset(t=null){this._value=t,this._errors=[],this.touched=!1,this.dirty=!1}}class a{static required(t){return e=>e==null||e===""?t||"This field is required":null}static minLength(t,e){return r=>r&&r.length<t?e||`Minimum length is ${t}`:null}static email(t){return e=>/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(e)?null:t||"Invalid email address"}}class u{constructor(t,e){if(this.form=t,this.formElement=document.querySelector(e),!this.formElement){console.warn(`Form element not found: ${e}`);return}this.initializeBindings()}initializeBindings(){Object.entries(this.form.controls).forEach(([t,e])=>{const r=this.formElement.querySelector(`[name="${t}"]`);r&&(r.value=e.value??"",r.addEventListener("input",s=>{const i=s.target;e.setValue(i.value),this.applyValidationStyles({[t]:e.error})}),r.addEventListener("blur",()=>{e.markAsTouched(),this.applyValidationStyles({[t]:e.error})}))})}validateAll(){const t=this.form.validateAll();this.applyValidationStyles(t)}applyValidationStyles(t){for(const[e,r]of Object.entries(t)){const s=this.formElement.querySelector(`[name="${e}"]`),i=this.formElement.querySelector(`[data-error-for="${e}"]`);s&&(s.classList.remove("cd-valid","cd-invalid"),r?(s.classList.add("cd-invalid"),i&&(i.textContent=r)):(s.classList.add("cd-valid"),i&&(i.textContent="")))}}}export{o as C,n as a,a as b,u as c};
