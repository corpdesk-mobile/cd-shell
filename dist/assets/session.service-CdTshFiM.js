import{P as C,C as s,E as _,B as b,a as f,D as U,c as P}from"./index-Cu7QyKko.js";import{C as g,G as w}from"./cd-logger.controller-DxPs_as6.js";import"./index-DKnwA07G.js";import"./index-CCs3NjLB.js";import"./dayjs.min-C47XFJE1.js";import"./index-JiKw9JSs.js";var M=Object.defineProperty,E=Object.getOwnPropertyDescriptor,y=(m,e,r,t)=>{for(var a=t>1?void 0:t?E(e,r):e,n=m.length-1,i;n>=0;n--)(i=m[n])&&(a=(t?i(e,r,a):i(a))||a);return t&&a&&M(e,r,a),a};let p=class{};y([C({name:"session_id"})],p.prototype,"sessionId",2);y([s({name:"current_user_id",default:1e3})],p.prototype,"currentUserId",2);y([s({name:"cd_token"})],p.prototype,"cdToken",2);y([s({name:"start_time",default:null})],p.prototype,"startTime",2);y([s({name:"acc_time",default:null})],p.prototype,"accTime",2);y([s({default:null})],p.prototype,"ttl",2);y([s({default:null})],p.prototype,"active",2);y([s("json",{name:"device_net_id",default:null})],p.prototype,"deviceNetId",2);y([s({name:"consumer_guid",length:36})],p.prototype,"consumerGuid",2);p=y([_({name:"session",synchronize:!1})],p);var $=Object.defineProperty,R=Object.getOwnPropertyDescriptor,l=(m,e,r,t)=>{for(var a=t>1?void 0:t?R(e,r):e,n=m.length-1,i;n>=0;n--)(i=m[n])&&(a=(t?i(e,r,a):i(a))||a);return t&&a&&$(e,r,a),a};let o=class{};l([C({name:"user_id"})],o.prototype,"userId",2);l([s({name:"user_guid",length:36})],o.prototype,"userGuid",2);l([s("varchar",{name:"user_name",length:50,nullable:!0})],o.prototype,"userName",2);l([s("char",{name:"password",length:60,default:null})],o.prototype,"password",2);l([s("varchar",{length:60,unique:!0,nullable:!0})],o.prototype,"email",2);l([s({name:"company_id",default:null})],o.prototype,"companyId",2);l([s({name:"doc_id",default:null})],o.prototype,"docId",2);l([s({name:"mobile",default:null})],o.prototype,"mobile",2);l([s({name:"gender",default:null})],o.prototype,"gender",2);l([s({name:"birth_date",default:null})],o.prototype,"birthDate",2);l([s({name:"postal_addr",default:null})],o.prototype,"postalAddr",2);l([s({name:"f_name",default:null})],o.prototype,"fName",2);l([s({name:"m_name",default:null})],o.prototype,"mName",2);l([s({name:"l_name",default:null})],o.prototype,"lName",2);l([s({name:"national_id",default:null})],o.prototype,"nationalId",2);l([s({name:"passport_id",default:null})],o.prototype,"passportId",2);l([s({name:"user_enabled",default:null})],o.prototype,"userEnabled",2);l([s("char",{name:"zip_code",length:5,default:null})],o.prototype,"zipCode",2);l([s({name:"activation_key",length:36})],o.prototype,"activationKey",2);l([s({name:"user_type_id",default:null})],o.prototype,"userTypeId",2);l([s({name:"user_profile",default:null})],o.prototype,"userProfile",2);o=l([_({name:"user",synchronize:!1})],o);class T{constructor(){this.b=new b,this.cRules={required:["userName","email","password"],noDuplicate:["userName","email"]}}async validateCreate(e){for(const n of this.cRules.required)if(!e[n])return{data:!1,state:!1,message:`Missing required field: ${n}`};const r={where:{userName:e.userName,email:e.email}},t={serviceModel:o,docName:"Validate Duplicate User",dSource:1,cmd:{query:r}},a=await this.b.read(null,null,t);return"state"in a&&"data"in a?!a.state||!a.data?{data:!1,state:!1,message:"Validation failed"}:a.data.length>0?{data:!0,state:!0,message:"Validation passed"}:{data:!1,state:!1,message:"Validation failed"}:{data:!1,state:!1,message:"Validation failed"}}async afterCreate(e){const r={where:{userGuid:e.userGuid}},t={serviceModel:o,docName:"Fetch Created User",dSource:1,cmd:{query:r}},a=await this.b.read(null,null,t);return"state"in a?a:f}async getUser(e){if(!e||!e.where||Object.keys(e.where).length===0)return{data:null,state:!1,message:'Invalid query: "where" condition is required'};const r={serviceModel:o,docName:"UserService::getUser",cmd:{action:"find",query:e},dSource:1};try{const t=await this.b.read(null,null,r);return"state"in t?t:f}catch(t){return g.error(`UserService.getUser() - Error: ${t.message}`),{data:null,state:!1,message:`Error retrieving User: ${t.message}`}}}beforeUpdate(e){return e.update.CoopEnabled===""&&(e.update.CoopEnabled=null),e}async getUserByID(e,r,t){const a={serviceInstance:this,serviceModel:o,docModel:U,docName:"UserService::getUserByID",cmd:{action:"find",query:{where:{userId:t}}},dSource:1};return await this.b.read(e,r,a)}async existingUserProfile(e,r,t){return""}async modifyProfile(e,r){return await{}}async validateProfileData(e,r,t){if(g.debug("UserService::validateProfileData()/profileData:",t),!t)return g.debug("UserService::validateProfileData()/01"),!1;if(!t.fieldPermissions||!t.userData)return g.debug("UserService::validateProfileData()/02"),!1;if(t.bio&&t.bio.length>500){g.debug("UserService::validateProfileData()/03");const a="Bio data is too long";this.b.err.push(a);const n={messages:this.b.err,code:"UserService:validateProfileData"};return await this.b.serviceErr(e,r,a,n.code),!1}return!0}}var O=Object.defineProperty,V=Object.getOwnPropertyDescriptor,h=(m,e,r,t)=>{for(var a=t>1?void 0:t?V(e,r):e,n=m.length-1,i;n>=0;n--)(i=m[n])&&(a=(t?i(e,r,a):i(a))||a);return t&&a&&O(e,r,a),a};let d=class{};h([C({name:"consumer_id"})],d.prototype,"consumerId",2);h([s({name:"consumer_guid",length:36})],d.prototype,"consumerGuid",2);h([s("varchar",{name:"consumer_name",length:50,nullable:!0})],d.prototype,"consumerName",2);h([s("tinyint",{name:"consumer_enabled",default:null})],d.prototype,"consumerEnabled",2);h([s({name:"doc_id",default:null})],d.prototype,"docId",2);h([s({name:"company_id",default:null})],d.prototype,"companyId",2);h([s({name:"company_guid",default:null})],d.prototype,"companyGuid",2);d=h([_({name:"consumer",synchronize:!1})],d);var j=Object.defineProperty,x=Object.getOwnPropertyDescriptor,c=(m,e,r,t)=>{for(var a=t>1?void 0:t?x(e,r):e,n=m.length-1,i;n>=0;n--)(i=m[n])&&(a=(t?i(e,r,a):i(a))||a);return t&&a&&j(e,r,a),a};let u=class{};c([C({name:"company_id"})],u.prototype,"companyId",2);c([s({name:"company_guid"})],u.prototype,"companyGuid",2);c([s({name:"company_name"})],u.prototype,"companyName",2);c([s({name:"company_type_guid"})],u.prototype,"companyTypeGuid",2);c([s({name:"directory_category_guid"})],u.prototype,"directoryCategoryGuid",2);c([s("int",{name:"doc_id"})],u.prototype,"docId",2);c([s({name:"company_enabled"})],u.prototype,"companyEnabled",2);c([s({name:"postal_address"})],u.prototype,"postalAddress",2);c([s({name:"phone"})],u.prototype,"phone",2);c([s({name:"mobile"})],u.prototype,"mobile",2);c([s({name:"email"})],u.prototype,"email",2);c([s({name:"physical_location"})],u.prototype,"physicalLocation",2);c([s({name:"city"})],u.prototype,"city",2);c([s({name:"country"})],u.prototype,"country",2);c([s({name:"logo"})],u.prototype,"logo",2);c([s({name:"city_guid"})],u.prototype,"cityGuid",2);c([s({name:"company_description"})],u.prototype,"company_description",2);c([s({name:"parent_guid"})],u.prototype,"parentGuid",2);c([s({name:"consumer_guid"})],u.prototype,"consumerGuid",2);c([s({name:"search_tags"})],u.prototype,"searchTags",2);u=c([_({name:"company",synchronize:!1})],u);class B extends w{constructor(){super(),this.b=new b,this.serviceModel=u,this.cRules={required:["companyName","companyTypeGuid","companyGuid"],noDuplicate:["companyName","companyTypeGuid"]}}async validateCreate(e){for(const n of this.cRules.required)if(!e[n])return{data:!1,state:!1,message:`Missing required field: ${n}`};const r={where:{companyName:e.companyName,companyTypeId:e.companyTypeGuid}},t={serviceModel:u,docName:"Validate Duplicate Company",dSource:1,cmd:{query:r}},a=await this.b.read(null,null,t);return"state"in a&&"data"in a?!a.state||!a.data?{data:!1,state:!1,message:"Validation failed"}:a.data.length>0?{data:!0,state:!0,message:"Validation passed"}:{data:!1,state:!1,message:"Validation failed"}:{data:!1,state:!1,message:"Validation failed"}}async afterCreate(e){const r={where:{companyGuid:e.companyGuid}},t={serviceModel:u,docName:"Fetch Created Company",dSource:1,cmd:{query:r}},a=await this.b.read(null,null,t);return"state"in a?a:f}async getCompany(e){if(!e||!e.where||Object.keys(e.where).length===0)return{data:null,state:!1,message:'Invalid query: "where" condition is required'};const r={serviceModel:u,docName:"CompanyService::getCompany",cmd:{action:"find",query:e},dSource:1};try{const t=await this.b.read(null,null,r);return"state"in t?t:f}catch(t){return g.error(`CompanyService.getCompany() - Error: ${t.message}`),{data:null,state:!1,message:`Error retrieving Company: ${t.message}`}}}beforeUpdate(e){return e.update.CoopEnabled===""&&(e.update.CoopEnabled=null),e}async getCompanyI(e,r,t){t===null&&(t=this.b.getQuery(e)),console.log("CompanyService::getCompany/f:",t);const a=this.b.siGet(t,"CompanyService::getCompany",u);try{return await this.b.read(e,r,a)}catch(n){console.log("CompanyService::read$()/e:",n),this.b.err.push(n.toString());const i={messages:this.b.err,code:"BaseService:update"};return await this.b.serviceErr(e,r,n,i.code),[]}}}class q extends w{constructor(){super(),this.b=new b,this.cRules={required:["consumerName","consumerTypeGuid","consumerGuid"],noDuplicate:["consumerName","consumerTypeGuid"]}}async validateCreate(e){for(const n of this.cRules.required)if(!e[n])return{data:!1,state:!1,message:`Missing required field: ${n}`};const r={where:{companyId:e.companyId}},t={serviceModel:d,docName:"Validate Duplicate Consumer",dSource:1,cmd:{query:r}},a=await this.b.read(null,null,t);return"state"in a&&"data"in a?!a.state||!a.data?{data:!1,state:!1,message:"Validation failed"}:a.data.length>0?{data:!0,state:!0,message:"Validation passed"}:{data:!1,state:!1,message:"Validation failed"}:{data:!1,state:!1,message:"Validation failed"}}async afterCreate(e){const r={where:{consumerGuid:e.consumerGuid}},t={serviceModel:d,docName:"Fetch Created Consumer",dSource:1,cmd:{query:r}},a=await this.b.read(null,null,t);return"state"in a?a:f}async getConsumer(e){if(!e||!e.where||Object.keys(e.where).length===0)return{data:null,state:!1,message:'Invalid query: "where" condition is required'};const r={serviceModel:d,docName:"ConsumerService::getConsumer",cmd:{action:"find",query:e},dSource:1};try{const t=await this.b.read(null,null,r);return"state"in t?t:f}catch(t){return g.error(`ConsumerService.getConsumer() - Error: ${t.message}`),{data:null,state:!1,message:`Error retrieving Consumer: ${t.message}`}}}beforeUpdate(e){return e.update.CoopEnabled===""&&(e.update.CoopEnabled=null),e}async getConsumerI(e,r,t){console.info("ConsumerService::getConsumerI()/query:",{query:t});const a={serviceInstance:this,serviceModel:d,docName:"ConsumerService::getConsumerI",cmd:{action:"find",query:t},dSource:1},n=await this.read(e,r,a);return!n.state||!n.data?null:n.data}async getCompanyData(e,r,t){const a=new B;console.log("moduleman/create::getCompanyData()/coGuid:",t);const n={serviceInstance:this,serviceModel:d,docName:"CompanyService::getCompanyData",cmd:{action:"find",query:{where:{consumerGuid:t}}},dSource:1},i=await this.read(e,r,n);if(!i.state||!i.data)return null;const v=i.data;return await a.getCompanyI(e,r,{where:{companyId:v[0].companyId}})}getConsumerByGuid$(e,r,t){const a={serviceInstance:this,serviceModel:d,docName:"ConsumerService::getConsumerByGuid",cmd:{action:"find",query:{where:{consumerGuid:t}}},dSource:1};return this.b.read$(e,r,a)}async getConsumerByGuid(e,r,t){const a={serviceInstance:this,serviceModel:d,docName:"ConsumerService::getConsumerByGuid",cmd:{action:"find",query:{where:{consumerGuid:t}}},dSource:1};return this.b.read(e,r,a)}}class X extends w{constructor(){super(),this.b=new b,this.sessModel=new p,this.sessIsSet=!1,this.sessData={cuid:1e3,cdToken:"",consumerGuid:"",deviceNetId:null,userData:null},this.sessResp={cd_token:"",jwt:null,ttl:600},this.currentUserData=new o,this.currentSessData=[],this.currentConsumerData=[],this.currentCompanyData=[],this.cRules={required:["sessionName","sessionTypeGuid","sessionGuid"],noDuplicate:["sessionName","sessionTypeGuid"]}}async validateCreate(e){for(const n of this.cRules.required)if(!e[n])return{data:!1,state:!1,message:`Missing required field: ${n}`};const r={where:{cdToken:e.cdToken}},t={serviceModel:p,docName:"Validate Duplicate Session",dSource:1,cmd:{query:r}},a=await this.b.read(null,null,t);return"state"in a&&"data"in a?!a.state||!a.data?{data:!1,state:!1,message:"Validation failed"}:a.data.length>0?{data:!0,state:!0,message:"Validation passed"}:{data:!1,state:!1,message:"Validation failed"}:{data:!1,state:!1,message:"Validation failed"}}async afterCreate(e){const r={where:{cdToken:e.cdToken}},t={serviceModel:p,docName:"Fetch Created Session",dSource:1,cmd:{query:r}},a=await this.b.read(null,null,t);return"state"in a?a:f}async getSession(e){if(!e||!e.where||Object.keys(e.where).length===0)return{data:null,state:!1,message:'Invalid query: "where" condition is required'};const r={serviceModel:p,docName:"SessionService::getSession",cmd:{action:"find",query:e},dSource:1};try{const t=await this.b.read(null,null,r);return"state"in t?t:f}catch(t){return{data:null,state:!1,message:`Error retrieving Session: ${t.message}`}}}beforeUpdate(e){return e.update.CoopEnabled===""&&(e.update.CoopEnabled=null),e}getTtl(){return 600}async getSessionDataExt(e,r,t){console.log("SessionService::getSessionDataExt()/01"),t||(console.log("SessionService::getSessionDataExt()/02"),`${e.post.dat.token}`);const a=new T,n=new q,i=await this.getSession({where:{currentUserId:this.b.cuid}});if(!i.state||!i.data||!Array.isArray(i.data)||i.data.length===0)return null;this.currentSessData=i.data;let v="";this.currentSessData[0].consumerGuid&&(v=this.currentSessData[0].consumerGuid);const S=this.currentSessData[0].currentUserId,I=await a.getUserByID(e,r,S);this.currentUserData=I[0],this.currentUserProfile=await a.existingUserProfile(e,r,S);const D=await n.getConsumerI(e,r,{where:{consumerGuid:v}});D&&(this.currentConsumerData=D);const G=await n.getCompanyData(e,r,v);G&&(this.currentCompanyData=G);const N={currentUser:I[0],currentUserProfile:this.currentUserProfile,currentSession:this.currentSessData[0],currentConsumer:this.currentConsumerData[0],currentCompany:this.currentCompanyData[0]};return t||Number(P.cacheTtl),N}}export{X as SessionService};
